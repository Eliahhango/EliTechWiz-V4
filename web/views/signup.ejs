<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>EliTechWiz - Create Admin Account</title>
  <link rel="stylesheet" href="/css/style.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    body {
      background-color: var(--sidebar-bg);
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
      padding: 0;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    
    .signup-container {
      background-color: var(--panel-bg);
      border-radius: 12px;
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
      width: 450px;
      max-width: 90%;
      padding: 0;
      overflow: hidden;
    }
    
    .signup-header {
      background-color: var(--whatsapp-green);
      color: white;
      padding: 20px;
      text-align: center;
    }
    
    .signup-header h1 {
      margin: 0;
      font-size: 24px;
    }
    
    .signup-body {
      padding: 30px;
    }
    
    .form-group {
      margin-bottom: 20px;
    }
    
    .form-group label {
      display: block;
      margin-bottom: 8px;
      color: var(--primary-text);
      font-weight: 500;
    }
    
    .form-input {
      width: 100%;
      padding: 12px;
      border: 1px solid var(--border-light);
      border-radius: 6px;
      background-color: var(--input-bg);
      color: var(--primary-text);
      box-sizing: border-box;
      font-size: 16px;
    }
    
    .form-input:focus {
      border-color: var(--whatsapp-green);
      outline: none;
    }
    
    .input-group {
      position: relative;
    }
    
    .input-group i {
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      right: 12px;
      color: var(--secondary-text);
      cursor: pointer;
    }
    
    .btn-signup {
      background-color: var(--whatsapp-green);
      color: white;
      border: none;
      border-radius: 6px;
      padding: 12px;
      width: 100%;
      font-size: 16px;
      font-weight: 500;
      cursor: pointer;
      transition: background-color 0.3s;
    }
    
    .btn-signup:hover {
      background-color: #128c7e;
    }
    
    .error-message {
      background-color: #ffebee;
      color: #c62828;
      padding: 10px;
      border-radius: 6px;
      margin-bottom: 20px;
      display: none;
    }
    
    .error-message.active {
      display: block;
    }
    
    .success-message {
      background-color: #e8f5e9;
      color: #2e7d32;
      padding: 10px;
      border-radius: 6px;
      margin-bottom: 20px;
      display: none;
    }
    
    .success-message.active {
      display: block;
    }
    
    .password-strength {
      margin: 15px 0;
    }
    
    .strength-meter {
      height: 8px;
      background-color: var(--border-light);
      border-radius: 4px;
      overflow: hidden;
      margin-bottom: 5px;
    }
    
    .strength-progress {
      height: 100%;
      width: 0;
      background-color: var(--danger);
      transition: width 0.3s, background-color 0.3s;
    }
    
    #passwordStrengthText {
      font-size: 0.85rem;
      color: var(--secondary-text);
    }
    
    .password-requirements {
      background-color: var(--panel-bg);
      padding: 10px 15px;
      border-radius: 8px;
      margin-top: 15px;
      border: 1px solid var(--border-light);
    }
    
    .password-requirements p {
      margin-bottom: 5px;
      font-weight: 500;
    }
    
    .password-requirements ul {
      padding-left: 20px;
      margin: 0;
    }
    
    .password-requirements li {
      font-size: 0.85rem;
      color: var(--secondary-text);
      margin-bottom: 3px;
    }
    
    .password-requirements li.valid {
      color: var(--whatsapp-green);
    }
    
    .password-requirements li.valid:before {
      content: 'âœ“ ';
    }
    
    .footer-text {
      text-align: center;
      margin-top: 20px;
      color: var(--secondary-text);
      font-size: 14px;
    }
    
    .back-link {
      text-align: center;
      margin-top: 15px;
    }
    
    .back-link a {
      color: var(--whatsapp-green);
      text-decoration: none;
    }
    
    .back-link a:hover {
      text-decoration: underline;
    }
    
    .logo-fallback {
      width: 60px;
      height: 60px;
      background-color: rgba(255, 255, 255, 0.2);
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      margin: 0 auto 10px;
    }
    
    .logo-fallback i {
      font-size: 32px;
      color: white;
    }
    
    .verification-section {
      border-top: 1px solid var(--border-light);
      margin-top: 20px;
      padding-top: 20px;
    }
    
    .verification-section h3 {
      margin-bottom: 15px;
    }
    
    .btn-secondary {
      background-color: #e0e0e0;
      color: var(--primary-text);
      border: none;
      border-radius: 6px;
      padding: 10px 15px;
      font-size: 14px;
      font-weight: 500;
      cursor: pointer;
      transition: background-color 0.3s;
    }
    
    .btn-secondary:hover {
      background-color: #d0d0d0;
    }
  </style>
</head>
<body>
  <div class="signup-container">
    <div class="signup-header">
      <% if (typeof logoExists !== 'undefined' && logoExists) { %>
        <img src="/img/logo.png" alt="EliTechWiz Logo" class="logo">
      <% } else { %>
        <div class="logo-fallback">
          <i class="fas fa-robot"></i>
        </div>
      <% } %>
      <h1>Create Admin Account</h1>
    </div>
    
    <div class="signup-body">
      <div id="errorMessage" class="error-message <%= error ? 'active' : '' %>">
        <%= error || '' %>
      </div>
      
      <div id="successMessage" class="success-message <%= success ? 'active' : '' %>">
        <%= success || '' %>
      </div>
      
      <form id="signupForm" action="/signup" method="POST">
        <div class="form-group">
          <label for="username">Username</label>
          <div class="input-group">
            <input type="text" id="username" name="username" class="form-input" placeholder="Enter username" required>
            <i class="fas fa-user"></i>
          </div>
        </div>
        
        <div class="form-group">
          <label for="password">Password</label>
          <div class="input-group">
            <input type="password" id="password" name="password" class="form-input" placeholder="Enter password" required>
            <i class="fas fa-eye" id="togglePassword"></i>
          </div>
        </div>
        
        <div class="password-strength">
          <div class="strength-meter">
            <div class="strength-progress" id="passwordStrengthProgress"></div>
          </div>
          <span id="passwordStrengthText">Password strength: Not set</span>
        </div>
        
        <div class="password-requirements">
          <p>Password must:</p>
          <ul>
            <li id="req-length">Be at least 12 characters long</li>
            <li id="req-uppercase">Include uppercase letters</li>
            <li id="req-lowercase">Include lowercase letters</li>
            <li id="req-number">Include numbers</li>
            <li id="req-special">Include special characters</li>
          </ul>
        </div>
        
        <div class="form-group">
          <label for="confirmPassword">Confirm Password</label>
          <div class="input-group">
            <input type="password" id="confirmPassword" name="confirmPassword" class="form-input" placeholder="Confirm password" required>
            <i class="fas fa-eye" id="toggleConfirmPassword"></i>
          </div>
        </div>
        
        <% if (requireVerification) { %>
        <div class="verification-section">
          <h3>Owner Verification</h3>
          <p>As an admin account already exists, you need a verification code sent to the owner's WhatsApp number.</p>
          
          <div class="form-group">
            <label for="ownerCode">Verification Code</label>
            <input type="text" id="ownerCode" name="ownerCode" class="form-input" placeholder="Enter verification code" required>
          </div>
          
          <button type="button" id="getCodeBtn" class="btn-secondary">Get Verification Code</button>
        </div>
        <% } %>
        
        <button type="submit" class="btn-signup">Create Account</button>
      </form>
      
      <div class="back-link">
        <a href="/login">Back to Login</a>
      </div>
    </div>
  </div>
  
  <script>
    // Toggle password visibility
    document.getElementById('togglePassword').addEventListener('click', function() {
      const passwordInput = document.getElementById('password');
      togglePasswordVisibility(passwordInput, this);
    });
    
    document.getElementById('toggleConfirmPassword').addEventListener('click', function() {
      const confirmPasswordInput = document.getElementById('confirmPassword');
      togglePasswordVisibility(confirmPasswordInput, this);
    });
    
    function togglePasswordVisibility(input, icon) {
      if (input.type === 'password') {
        input.type = 'text';
        icon.classList.remove('fa-eye');
        icon.classList.add('fa-eye-slash');
      } else {
        input.type = 'password';
        icon.classList.remove('fa-eye-slash');
        icon.classList.add('fa-eye');
      }
    }
    
    // Password strength checker
    const passwordInput = document.getElementById('password');
    passwordInput.addEventListener('input', checkPasswordStrength);
    
    function checkPasswordStrength() {
      const password = passwordInput.value;
      
      // Reset all requirements
      document.querySelectorAll('.password-requirements li').forEach(li => {
        li.classList.remove('valid');
      });
      
      if (!password) {
        document.getElementById('passwordStrengthProgress').style.width = '0';
        document.getElementById('passwordStrengthProgress').className = '';
        document.getElementById('passwordStrengthText').innerText = 'Password strength: Not set';
        return;
      }
      
      let strength = 0;
      
      // Check length
      if (password.length >= 12) {
        strength += 25;
        document.getElementById('req-length').classList.add('valid');
      }
      
      // Check for uppercase letters
      if (/[A-Z]/.test(password)) {
        strength += 25;
        document.getElementById('req-uppercase').classList.add('valid');
      }
      
      // Check for lowercase letters
      if (/[a-z]/.test(password)) {
        strength += 25;
        document.getElementById('req-lowercase').classList.add('valid');
      }
      
      // Check for numbers
      if (/[0-9]/.test(password)) {
        strength += 25;
        document.getElementById('req-number').classList.add('valid');
      }
      
      // Check for special characters
      if (/[^A-Za-z0-9]/.test(password)) {
        strength += 25;
        document.getElementById('req-special').classList.add('valid');
      }
      
      // Normalize strength to 100%
      strength = Math.min(100, strength);
      
      // Update UI
      const strengthProgress = document.getElementById('passwordStrengthProgress');
      const strengthText = document.getElementById('passwordStrengthText');
      
      strengthProgress.style.width = strength + '%';
      strengthProgress.className = '';
      
      if (strength <= 25) {
        strengthProgress.classList.add('weak');
        strengthText.innerText = 'Password strength: Weak';
        strengthProgress.style.backgroundColor = 'var(--danger)';
      } else if (strength <= 50) {
        strengthProgress.classList.add('fair');
        strengthText.innerText = 'Password strength: Fair';
        strengthProgress.style.backgroundColor = 'var(--warning)';
      } else if (strength <= 75) {
        strengthProgress.classList.add('good');
        strengthText.innerText = 'Password strength: Good';
        strengthProgress.style.backgroundColor = 'var(--primary)';
      } else {
        strengthProgress.classList.add('strong');
        strengthText.innerText = 'Password strength: Strong';
        strengthProgress.style.backgroundColor = 'var(--whatsapp-green)';
      }
    }
    
    // Get verification code button
    const getCodeBtn = document.getElementById('getCodeBtn');
    if (getCodeBtn) {
      getCodeBtn.addEventListener('click', async function() {
        try {
          this.disabled = true;
          this.textContent = 'Sending...';
          
          const response = await fetch('/generate-code', {
            method: 'GET',
            headers: {
              'Content-Type': 'application/json'
            }
          });
          
          const data = await response.json();
          
          if (data.success) {
            const errorMessage = document.getElementById('errorMessage');
            const successMessage = document.getElementById('successMessage');
            
            errorMessage.classList.remove('active');
            successMessage.textContent = data.message;
            successMessage.classList.add('active');
          } else {
            const errorMessage = document.getElementById('errorMessage');
            const successMessage = document.getElementById('successMessage');
            
            successMessage.classList.remove('active');
            errorMessage.textContent = data.error || 'Failed to send verification code';
            errorMessage.classList.add('active');
          }
        } catch (error) {
          console.error('Error requesting verification code:', error);
          const errorMessage = document.getElementById('errorMessage');
          errorMessage.textContent = 'An error occurred. Please try again.';
          errorMessage.classList.add('active');
        } finally {
          this.disabled = false;
          this.textContent = 'Get Verification Code';
        }
      });
    }
    
    // Form validation
    document.getElementById('signupForm').addEventListener('submit', function(e) {
      const password = document.getElementById('password').value;
      const confirmPassword = document.getElementById('confirmPassword').value;
      const errorMessage = document.getElementById('errorMessage');
      
      // Check if passwords match
      if (password !== confirmPassword) {
        e.preventDefault();
        errorMessage.textContent = 'Passwords do not match';
        errorMessage.classList.add('active');
        return;
      }
      
      // Check password strength
      const lengthValid = password.length >= 12;
      const uppercaseValid = /[A-Z]/.test(password);
      const lowercaseValid = /[a-z]/.test(password);
      const numberValid = /[0-9]/.test(password);
      const specialValid = /[^A-Za-z0-9]/.test(password);
      
      if (!lengthValid || !uppercaseValid || !lowercaseValid || !numberValid || !specialValid) {
        e.preventDefault();
        errorMessage.textContent = 'Please create a stronger password that meets all requirements';
        errorMessage.classList.add('active');
        return;
      }
      
      // If success message is showing, redirect to login
      if (document.getElementById('successMessage').classList.contains('active')) {
        e.preventDefault();
        window.location.href = '/login';
      }
    });
    
    // Hide success/error messages after 5 seconds
    setTimeout(function() {
      const messages = document.querySelectorAll('.error-message, .success-message');
      messages.forEach(msg => {
        if (msg.textContent.trim().length > 0) {
          setTimeout(() => {
            msg.classList.remove('active');
          }, 5000);
        }
      });
    }, 100);
  </script>
</body>
</html> 